* ideally add a never allow mechanism for execmod and ptrace
    access is governed through macro's but there is no neverallow rule enforcing the use of them, too complicated

* (roletype sys.r sys_object_type) in sys.cil is not optimal
    ideally "usersubject_object_type" (which would be associated with all usersubject object types) would be excluded because
    system generally has no business with user objects. This will not fly though because for example /run/UID/systemd is created
    with sys.u:sys.r:...

    took care of /run/UID/systemd by associating sys.r with systemd.user_tmpfs_object, so unless there are anymore of these exceptions,
    i should be able to make this work

* the priv_user_login and ssh_priv_user_login booleans are empty
    login programs are allowed to manual subject type transition to all login user subjects on shell files
    differentiate between priv and unpriv login users and make priv user login conditional

    took care of priv_user_login and ssh_priv_user_login: need to test it

* there are a lot of redundant (context ...) statements that could be removed (low priority)
    the question is which ones to remove without being inconsistent, some are easier than others

    There is a bug in secilc that prevents me from declaring contexts in blockbstracts if they are inherited on more than a single level

* cover runuser as its setuid and maintains pam config. maybe it makes sense to run this label it sudo_exec_t (akmods runs runuser)

* create a template for gui app common rules (then apply that to gdm as well, gdm runs gui apps in it own domain and currently added individual macros)

* exclude things from being tmpfiles manageable/relabelable, and readahead readable ( i create nice macros for that, just need to use them)

* useradd/userdel RFE: use setfscreatecon for user mail spool files as well (not just for user home directories)
    currently the user mail spool files get created with the wrong security context

* role: everything run by dbus session bus is a dbus_session_service. should create that macro instead
    update: i did this, as well for gsession apps and gshell apps, the problem is role association
    calling "app_run" interfaces is cleaner. currently i implemented a dirty hack to associate roles
    example: roleattributeset gvfs_role dbus_session_role (so all dbus_session_roles are automatically also gvfs_role)

* deal with nfs related stuff (seems systemd all of a sudden started requiring this with a recent update)
